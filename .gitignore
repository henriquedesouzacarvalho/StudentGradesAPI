###########################
# .NET / C#
###########################

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio cache/options
.vs/

# Visual Studio Code - mantenha configurações do time
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# JetBrains Rider
.idea/
*.sln.iml

#qodo
.qodo/

# Visual Studio Trace Files
*.e2e

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# NuGet Packages
*.nupkg
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Microsoft Azure ApplicationInsights config file
ApplicationInsights.config

# Visual Studio code coverage results
*.coverage
*.coveragexml
coverage/
.coverage

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# Entity Framework - CORRIGIDO: não ignore todas as migrations
# Migrations/
# Apenas ignore migrations específicas se necessário:
# Migrations/*_*.cs
# !Migrations/*_Initial.cs

# Sensitive Data
appsettings.*.local.json
*.local.json
secrets.json
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
*.code-workspace

# Local History for Visual Studio Code
.history/

###########################
# Angular / NX / Node
###########################

# Dependencies
node_modules/
jspm_packages/

# Testing
coverage/
*.lcov
.nyc_output

# Production builds
dist/
dist-ssr/
build/
out/
tmp/
temp/

# Angular specific
.angular/
.ng_pkg_build/

# NX specific
.nx/
nx-cloud.env

# Package manager locks - CORRIGIDO: mantenha versionados
# Descomente apenas se sua equipe decidir não versionar
# package-lock.json
# yarn.lock
# pnpm-lock.yaml

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt

# Gatsby files
.cache/

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

###########################
# Test Results & Reports
###########################

# Test results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
*.trx

# Performance test results
*.psess
*.vsp
*.vspx
*.sap

# Benchmark results
BenchmarkDotNet.Artifacts/

# SonarQube results
.sonarqube/
.scannerwork/

###########################
# Security & Certificates
###########################

# Security certificates (desenvolvimento)
*.pfx
*.cer
*.key
*.pem

# Sensitive configuration files
appsettings.Production.json
appsettings.Staging.json
# Mas mantenha templates
!appsettings.json
!appsettings.Development.json.template

###########################
# Database Files
###########################

# Database files
*.db
*.sqlite
*.sqlite3
*.db-shm
*.db-wal

###########################
# OS Generated Files
###########################

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes

# Windows
ehthumbs.db
Thumbs.db
Desktop.ini

# Linux
*~

###########################
# Logs
###########################

# Application logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

###########################
# Project Specific
###########################

# Local developer notes
notes.local.md
TODO.local.md
*.local.*

# Temporary files
*.tmp
*.temp

# Backup files
*.bak
*.backup

# Métricas e relatórios customizados do time
.metrics/*.json
!.metrics/metrics-config.json

###########################
# IMPORTANTE - Arquivos que DEVEM ser versionados
###########################

# Configurações do time (MANTER NO GIT)
!.editorconfig
!.gitignore
!.gitattributes
!Directory.Build.props
!Directory.Build.targets
!global.json

# Git hooks e automação (MANTER NO GIT)
!.husky/
!.husky/**

# CI/CD (MANTER NO GIT)
!.github/
!.github/**
!azure-pipelines.yml
!.gitlab-ci.yml

# Configurações de qualidade (MANTER NO GIT)
!.sonarlint/
!sonar-project.properties
!.eslintrc*
!.prettierrc*
!stylecop.json
!*.ruleset
!.globalconfig

# Documentação (MANTER NO GIT)
!README.md
!CONTRIBUTING.md
!CODE_OF_CONDUCT.md
!CHANGELOG.md
!docs/
!docs/**

# Configurações NX/Angular (MANTER NO GIT)
!nx.json
!workspace.json
!project.json
!angular.json

# Scripts e ferramentas do time (MANTER NO GIT)
!scripts/
!scripts/**
!tools/
!tools/**

# Docker (MANTER NO GIT)
!Dockerfile*
!docker-compose*.yml
!.dockerignore

# Configurações de desenvolvimento (MANTER NO GIT)
!.nvmrc
!.node-version
